import type { DatabaseType } from "./QueryRunner";
import type { ClientBase } from 'pg';
import { PromiseBasedWithSqlTransactionQueryRunner } from "./PromiseBasedWithSqlTransactionQueryRunner";
export declare class PgQueryRunner extends PromiseBasedWithSqlTransactionQueryRunner {
    readonly database: DatabaseType;
    readonly connection: ClientBase;
    constructor(connection: ClientBase);
    useDatabase(database: DatabaseType): void;
    getNativeRunner(): ClientBase;
    getCurrentNativeTransaction(): undefined;
    execute<RESULT>(fn: (connection: unknown, transaction?: unknown) => Promise<RESULT>): Promise<RESULT>;
    protected executeQueryReturning(query: string, params: any[]): Promise<any[]>;
    protected executeMutation(query: string, params: any[]): Promise<number>;
    addParam(params: any[], value: any): string;
}
