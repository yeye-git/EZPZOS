import type { DatabaseType } from "./QueryRunner";
import type { Database } from 'sqlite';
import { PromiseBasedWithSqlTransactionQueryRunner } from "./PromiseBasedWithSqlTransactionQueryRunner";
export declare class SqliteQueryRunner extends PromiseBasedWithSqlTransactionQueryRunner {
    readonly database: DatabaseType;
    readonly connection: Database;
    constructor(connection: Database);
    useDatabase(database: DatabaseType): void;
    getNativeRunner(): Database;
    getCurrentNativeTransaction(): undefined;
    execute<RESULT>(fn: (connection: unknown, transaction?: unknown) => Promise<RESULT>): Promise<RESULT>;
    protected executeQueryReturning(query: string, params: any[]): Promise<any[]>;
    protected executeMutation(query: string, params: any[]): Promise<number>;
    executeInsertReturningLastInsertedId(query: string, params?: any[]): Promise<any>;
    executeInsertReturningMultipleLastInsertedId(query: string, params?: any[]): Promise<any>;
    addParam(params: any[], value: any): string;
}
