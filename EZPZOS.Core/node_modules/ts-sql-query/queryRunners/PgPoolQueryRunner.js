"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PgPoolQueryRunner = void 0;
const PromiseBasedPoolQueryRunner_1 = require("./PromiseBasedPoolQueryRunner");
const PgQueryRunner_1 = require("./PgQueryRunner");
class PgPoolQueryRunner extends PromiseBasedPoolQueryRunner_1.PromiseBasedPoolQueryRunner {
    constructor(pool) {
        super();
        this.pool = pool;
        this.database = 'postgreSql';
    }
    useDatabase(database) {
        if (database !== 'postgreSql') {
            throw new Error('Unsupported database: ' + database + '. PgPoolQueryRunner only supports postgreSql databases');
        }
    }
    getNativeRunner() {
        return this.pool;
    }
    addParam(params, value) {
        params.push(value);
        return '$' + params.length;
    }
    createQueryRunner() {
        return this.pool.connect().then(connection => new PgQueryRunner_1.PgQueryRunner(connection));
    }
    releaseQueryRunner(queryRunner) {
        queryRunner.getNativeRunner().release();
    }
}
exports.PgPoolQueryRunner = PgPoolQueryRunner;
