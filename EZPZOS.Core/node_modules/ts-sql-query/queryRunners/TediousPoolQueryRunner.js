"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TediousPoolQueryRunner = void 0;
const PromiseBasedPoolQueryRunner_1 = require("./PromiseBasedPoolQueryRunner");
const TediousQueryRunner_1 = require("./TediousQueryRunner");
/**
 * @deprecated Use mssql instead with MssqlPoolQueryRunner or MssqlPoolQueryRunner
 */
class TediousPoolQueryRunner extends PromiseBasedPoolQueryRunner_1.PromiseBasedPoolQueryRunner {
    constructor(pool) {
        super();
        this.pool = pool;
        this.database = 'sqlServer';
    }
    useDatabase(database) {
        if (database !== 'sqlServer') {
            throw new Error('Unsupported database: ' + database + '. TediousPoolQueryRunner only supports sqlServer databases');
        }
    }
    getNativeRunner() {
        return this.pool;
    }
    addParam(params, value) {
        const index = params.length;
        params.push(value);
        return '@' + index;
    }
    createQueryRunner() {
        return new Promise((resolve, reject) => {
            this.pool.acquire((error, sqlServerConnection) => {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(new TediousQueryRunner_1.TediousQueryRunner(sqlServerConnection));
                }
            });
        });
    }
    releaseQueryRunner(queryRunner) {
        queryRunner.getNativeRunner().release();
    }
}
exports.TediousPoolQueryRunner = TediousPoolQueryRunner;
