import type { DatabaseType, QueryRunner } from "./QueryRunner";
import type { ConnectionPool } from 'any-db';
import { PromiseBasedPoolQueryRunner } from "./PromiseBasedPoolQueryRunner";
import type * as begin from 'any-db-transaction';
/**
 * @deprecated
 */
export declare class AnyDBPoolQueryRunner extends PromiseBasedPoolQueryRunner {
    readonly database: DatabaseType;
    readonly pool: ConnectionPool;
    constructor(pool: ConnectionPool);
    useDatabase(database: DatabaseType): void;
    getNativeRunner(): ConnectionPool;
    getCurrentNativeTransaction(): begin.Transaction | undefined;
    addParam(params: any[], value: any): string;
    protected createQueryRunner(): Promise<QueryRunner>;
    protected releaseQueryRunner(queryRunner: QueryRunner): void;
}
