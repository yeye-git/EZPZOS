import type { DatabaseType, QueryRunner } from "./QueryRunner";
import type { ConnectionPool, Transaction } from 'mssql';
import { PromiseBasedPoolQueryRunner } from "./PromiseBasedPoolQueryRunner";
export declare class MssqlPoolPromiseQueryRunner extends PromiseBasedPoolQueryRunner {
    readonly database: DatabaseType;
    readonly promisePool: Promise<ConnectionPool>;
    constructor(promisePool: Promise<ConnectionPool>);
    useDatabase(database: DatabaseType): void;
    getNativeRunner(): Promise<ConnectionPool>;
    getCurrentNativeTransaction(): Transaction | undefined;
    addParam(params: any[], value: any): string;
    protected createQueryRunner(): Promise<QueryRunner>;
    protected releaseQueryRunner(_queryRunner: QueryRunner): void;
}
