"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.__getTableOrViewPrivate = exports.__isAllowed = exports.__getValuesForInsert = exports.__getOldValues = exports.__registerRequiredColumn = exports.__registerTableOrView = exports.__addWiths = void 0;
function __addWiths(value, sqlBuilder, withs) {
    if (value === undefined || value === null) {
        return;
    }
    if (typeof value === 'object' && typeof value.__addWiths === 'function') {
        value.__addWiths(sqlBuilder, withs);
    }
}
exports.__addWiths = __addWiths;
function __registerTableOrView(value, sqlBuilder, requiredTablesOrViews) {
    if (value === undefined || value === null) {
        return;
    }
    if (typeof value === 'object' && typeof value.__registerTableOrView === 'function') {
        value.__registerTableOrView(sqlBuilder, requiredTablesOrViews);
    }
}
exports.__registerTableOrView = __registerTableOrView;
function __registerRequiredColumn(value, sqlBuilder, requiredColumns, onlyForTablesOrViews) {
    if (value === undefined || value === null) {
        return;
    }
    if (typeof value === 'object' && typeof value.__registerRequiredColumn === 'function') {
        value.__registerRequiredColumn(sqlBuilder, requiredColumns, onlyForTablesOrViews);
    }
}
exports.__registerRequiredColumn = __registerRequiredColumn;
function __getOldValues(value, sqlBuilder) {
    if (value === undefined || value === null) {
        return undefined;
    }
    if (typeof value === 'object' && typeof value.__getOldValues === 'function') {
        return value.__getOldValues(sqlBuilder);
    }
    return undefined;
}
exports.__getOldValues = __getOldValues;
function __getValuesForInsert(value, sqlBuilder) {
    if (value === undefined || value === null) {
        return undefined;
    }
    if (typeof value === 'object' && typeof value.__getValuesForInsert === 'function') {
        return value.__getValuesForInsert(sqlBuilder);
    }
    return undefined;
}
exports.__getValuesForInsert = __getValuesForInsert;
function __isAllowed(value, sqlBuilder) {
    if (value === undefined || value === null) {
        return true;
    }
    if (typeof value === 'object' && typeof value.__getValuesForInsert === 'function') {
        return value.__isAllowed(sqlBuilder);
    }
    return true;
}
exports.__isAllowed = __isAllowed;
function __getTableOrViewPrivate(table) {
    return table;
}
exports.__getTableOrViewPrivate = __getTableOrViewPrivate;
