pipeline {
    agent any
    triggers {
        githubPush() 
    }
    environment {
        AWS_ACCOUNT_ID = '897244716306'
        AWS_REGION = 'ap-southeast-2'
        ECR_REPO_NAME = 'ezpzos-web'
        SERVICE_NAME = 'ezpzos'
        ECR_REPO = '897244716306.dkr.ecr.ap-southeast-2.amazonaws.com'
        IMAGE_TAG = 'latest'
    }
    tools {
        nodejs 'NodeJS 22.6.0'
    }

    stages {
        stage('Checkout EZPZOS.Core') {
            steps {
                git credentialsId: 'Github-ssh-key', branch: 'main', url: 'git@github.com:yeye-git/ezpzos.git'
            }
        }

        stage('Build EZPZOS.Core') {
            steps {
                dir('EZPZOS.Core') {
                    sh 'npm install'
                    sh 'chmod +x ./node_modules/.bin/rimraf'
                    sh 'chmod +x ./node_modules/.bin/tsc'
                    sh 'chmod +x ./node_modules/.bin/babel'
                    sh 'npm run build'
                    echo 'Build core success'
                }
            }
        }

        stage('Build EZPZOS.Web') {
            steps {
                dir('EZPZOS.Web') {
                    sh 'npm install'
                    // sh 'npm install buffer'
                    // sh 'npm install Buffer --save'
                    sh 'npm run build'
                    echo 'Build Web success'
                    sh 'ls -la dist/'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker Image...'
                script {
                    sh 'docker --version'
                    sh "docker build -t ${ECR_REPO_NAME}:${IMAGE_TAG} -f Dockerfile-frontend ."
                    echo 'Build docker success'
                }
            }
        }

        stage('Login to ECR') {
            steps {
                script {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY',
                        credentialsId: 'AWS-front'
                    ]]) {
                        sh '''
                     
                        aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 897244716306.dkr.ecr.ap-southeast-2.amazonaws.com
                        '''
                    }
                    echo 'ECR login success'
                }
            }
        }

        stage('Tag Docker Image') {
            steps {
                script {
                    sh 'docker tag ${ECR_REPO_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:${IMAGE_TAG}'
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                script {
                    sh 'docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:${IMAGE_TAG}'
                    echo 'Push Docker image to ECR success'
                }
            }
        }       
    }
} 
